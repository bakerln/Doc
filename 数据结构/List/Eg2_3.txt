void InitSpace_SL(SLinkList &space){
	for(i=0; i<MAXSIZE-1; i++){
		space[i].cur = i+1;
	}
	space[MAXSIZE-1].cur = 0;
}//InitSpace_SL

int Malloc_SL(SLinkList &space){
	//若备用空间链表非空，则返回分配的结点下标
	i = space[0].cur;
	if(space[0].cur != null){
		space[0].cur = space[i].cur;
	}
	return i;
}

void Free_SL(SLinkList &space, int k){
	space[k].cur = space[0].cur;
	space[0].cur = k;
}

void difference(SLinkList &space, int &s){
	InitSpace_SL(space);
	s = Malloc_SL(space);
	r = s;
	scanf(m,n);
	for(j = 1; j<=m; j++){
		i = Malloc_SL(space);
		scanf(space[i].date);
		space[r].cur = i;
		r = i;
	}
	space[r].cur = 0;
	for(j = 1; j<=n; j++){
		scanf(b);
		p = s;
		k = space[s].cur;
		while(k != space[r].cur && space[k].date != b){
			p = k;						//space[p].cur = k
			k = space[k].cur;
		}
		if(k == space[r].cur){
			i = Malloc_SL(space);
			space[i].date = b;
			space[i].cur = space[r].cur;
			space[r].cur = i;
		}else{
			space[p].cur = space[k].cur;
			Free_SL(space,k);
			if(r==k) r=p;
		}
	}
}